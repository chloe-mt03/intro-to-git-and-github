[
  {
    "objectID": "index.html#automated-version-control-avc",
    "href": "index.html#automated-version-control-avc",
    "title": "Introduction to git and github",
    "section": "Automated Version Control (AVC)",
    "text": "Automated Version Control (AVC)"
  },
  {
    "objectID": "index.html#automated-version-control-avc-1",
    "href": "index.html#automated-version-control-avc-1",
    "title": "Introduction to git and github",
    "section": "Automated Version Control (AVC)",
    "text": "Automated Version Control (AVC)\n\nA system that automatically manages changes to files, typically in the context of software development.\nKeeps track of every modification to the code in a special kind of database.\nIf a mistake is made, developers can turn back the clock and compare earlier versions of the code to help fix the mistake while minimising disruption to all team members."
  },
  {
    "objectID": "index.html#avc-what-should-i-care",
    "href": "index.html#avc-what-should-i-care",
    "title": "Introduction to git and github",
    "section": "AVC: What should I care?",
    "text": "AVC: What should I care?"
  },
  {
    "objectID": "index.html#avc-what-should-i-care-1",
    "href": "index.html#avc-what-should-i-care-1",
    "title": "Introduction to git and github",
    "section": "AVC: What should I care?",
    "text": "AVC: What should I care?"
  },
  {
    "objectID": "index.html#automated-version-control",
    "href": "index.html#automated-version-control",
    "title": "Introduction to git and github",
    "section": "Automated Version Control",
    "text": "Automated Version Control\n\nBackup and restore: Changes are stored securely and can be restored at any point.\nCollaboration: Multiple people can work on the same project at the same time.\nTrack changes: You can see who last modified something that might be causing a problem, who introduced an issue, when it was introduced, and more.\nExplore alternatives: Safely experiment with new ideas in a branch, without affecting the main project."
  },
  {
    "objectID": "index.html#introduction-to-git-and-github",
    "href": "index.html#introduction-to-git-and-github",
    "title": "Introduction to git and github",
    "section": "Introduction to Git and GitHub",
    "text": "Introduction to Git and GitHub\n\n\nGit: A version control system that lets you manage and keep track of your source code history.\nGitHub: A cloud-based hosting service that lets you manage Git repositories.\nBenefits:\n\nTrack changes in your code across versions.\nCollaborate with others on projects.\nBackup your work on the cloud."
  },
  {
    "objectID": "index.html#git-command-basics",
    "href": "index.html#git-command-basics",
    "title": "Introduction to git and github",
    "section": "Git command Basics",
    "text": "Git command Basics\n\nSetting upCreating repo\n\n\n\nInstallation:\n\nDownload from git-scm.com\n\nConfiguration:\n\nSet your user name: git config --global user.name \"Your Name\"\nSet your email: git config --global user.email \"your.email@example.com\"\n\n\n\n\n\n\nInitialise a New Repo:\n\ngit init\n\nCloning an Existing Repo:\n\ngit clone https://github.com/username/repository.git"
  },
  {
    "objectID": "index.html#git-command-basics-1",
    "href": "index.html#git-command-basics-1",
    "title": "Introduction to git and github",
    "section": "Git command Basics",
    "text": "Git command Basics\n\nMaking Changes and CommittingPulling UpdatesPushing Changes\n\n\n\nTrack Changes:\n\ngit status\ngit add &lt;file&gt;\n\nCommit Changes:\n\ngit commit -m \"Commit message\"\n\n\n\n\n\n\nUsing Git Pull:\n\ngit pull origin master\nThis command pulls changes from the remote repository and merges them into your local branch.\n\n\n\n\n\n\nConnect to Remote Repo:\n\ngit remote add origin https://github.com/username/repository.git\n\nPush Changes:\n\ngit push origin master"
  },
  {
    "objectID": "index.html#other-useful-git-commands",
    "href": "index.html#other-useful-git-commands",
    "title": "Introduction to git and github",
    "section": "Other Useful Git Commands",
    "text": "Other Useful Git Commands\n\nBranch ManagementInvestigating ChangesReorganising Commits\n\n\n\ngit branch: List, create, or delete branches.\ngit switch &lt;branch&gt;: Switch branches.\n\n\n\n\n\ngit log: Display commit logs.\ngit diff: Show file differences not yet staged.\n\n\n\n\n\ngit rebase: Reapply commits on top of another base tip."
  },
  {
    "objectID": "index.html#git-data-transport-commands",
    "href": "index.html#git-data-transport-commands",
    "title": "Introduction to git and github",
    "section": "Git data transport commands",
    "text": "Git data transport commands"
  },
  {
    "objectID": "index.html#github-workflow",
    "href": "index.html#github-workflow",
    "title": "Introduction to git and github",
    "section": "GitHub workflow",
    "text": "GitHub workflow"
  },
  {
    "objectID": "index.html#github-workflow-1",
    "href": "index.html#github-workflow-1",
    "title": "Introduction to git and github",
    "section": "GitHub workflow",
    "text": "GitHub workflow"
  },
  {
    "objectID": "index.html#exercises",
    "href": "index.html#exercises",
    "title": "Introduction to git and github",
    "section": "Exercises",
    "text": "Exercises\nðŸ¥‘ How to Make the Best Guacamole?\n\nCreate SSH keys\ngit clone git@github.com:mxochicale/intro-to-git-and-github.git\nRaise a new issue with the tamplate How to Make the Best Guacamole?"
  },
  {
    "objectID": "index.html#references",
    "href": "index.html#references",
    "title": "Introduction to git and github",
    "section": "References",
    "text": "References\n\nVersion Control with Git\nVersion Control with Mercurial\nIntroduction to Version Control\nResolving a merge conflict using the command line"
  }
]